// Generated by CoffeeScript 1.6.2
(function() {
  var confirm_handler, reveal_confirm;

  reveal_confirm = function(element) {
    var confirm, confirm_button, confirm_html, modal;

    confirm = element.data('confirm');
    if (!confirm) {
      return true;
    }
    if (typeof confirm === 'string') {
      return window.confirm(confirm);
    }
    modal = $("<div class='reveal-modal medium'>\n  <h2 class='header'></h2>\n  <p class='warning'></p>\n  <div class='footer'>\n    <a class='cancel-button secondary button radius inline'>Cancel</a>\n  </div>\n</div>");
    modal.find('.header').html(confirm.title || 'Are you sure?');
    modal.find('.warning').html(confirm.text || 'This action cannot be undone.');
    confirm_button = element.is('a') ? element.clone() : $('<a/>');
    confirm_button.removeAttr('class').removeAttr('data-confirm').addClass('button radius alert inline confirm').html(confirm.button || 'Confirm');
    if (element.is('form') || element.is(':input')) {
      confirm_button.on('click', function() {
        return element.closest('form').removeAttr('data-confirm').submit();
      });
    }
    modal.find('.cancel-button').on('click', function(e) {
      return modal.foundation('reveal', 'close');
    });
    modal.find('.footer').append(confirm_button);
    if (confirm.password) {
      confirm_html = "<label>Type <i>" + confirm.password + "</i> to continue:</label>\n<input class='confirm-password' type='text' />";
      modal.find('.warning').after($(confirm_html));
      modal.find('.confirm-password').on('keyup', function(e) {
        return confirm_button.toggleClass('disabled', $(this).val() !== confirm.password);
      });
      confirm_button.addClass('disabled').on('click', function(e) {
        if ($(this).hasClass('disabled')) {
          return false;
        }
      });
    }
    modal.appendTo($('body')).foundation('reveal', 'open').on('closed.fndtn.reveal', function(e) {
      return modal.remove();
    });
    return false;
  };

  if ($.rails) {
    $.rails.allowAction = reveal_confirm;
  } else {
    confirm_handler = function(e) {
      var proceed;

      proceed = reveal_confirm($(this));
      if (!proceed) {
        e.preventDefault();
        e.stopImmediatePropagation();
      }
      return proceed;
    };
    $(document).on('click', 'a[data-confirm], :input[data-confirm]', confirm_handler);
    $(document).on('submit', 'form[data-confirm]', confirm_handler);
  }

}).call(this);
